# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  node: circleci/node@4.2.0
  aws-cli: circleci/aws-cli@2.0.0
  eb: circleci/aws-elastic-beanstalk@1.0.0
  
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  frontend:
    working_directory: ~/app/udagram-frontend
    executer: node/default

    steps:
      - checkout:
        path: ~/app
      - node/install-packages:
        app-dir: ~/app/udagram-frontend
      - run:
          name: Build Frontend
          command: 
            npm run build
      - aws-cli/install
      - run:
          name: Deploy Frontend
          command: npm run deploy
  server:
    working_directory: ~/app/udagram-api
    executor: node/default
    steps:
      - checkout:
          path: ~/app
      - node/install-packages:
          app-dir: ~/app/udagram-api
      - run:
          name: Build and Archive Server
          command:
            npm run build
      - aws-cli/install
      - run:
          name: Deploy Server
          command: npm run deploy
            
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  udagram-workflow:
    jobs:
      - frontend
      - server
